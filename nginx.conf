worker_processes 3; # 워커 프로세스 3개

events {
    worker_connections 1024; # 각 워커당 최대 1024개 연결 처리 가능
}
# 현재 시스템은 최대 3 * 1024 = 3072개 동시 연결 처리 가능, 만약 3073번째 연결이 들어오려고 하면, 그때서야 연결이 거부되거나 대기 상태가 된다.

http {
    # Client <-> Nginx 간 설정
    keepalive_timeout 30s;  # timeout 30초
    keepalive_requests 100; # 최대 100개 요청을 Nginx가 받을 수 있다.

    # Nginx <-> Chat Server 간 설정
    upstream chat {
        server host.docker.internal:8090; # 요청을 전달할 서버
    }

    # Nginx <-> Auth Server 간 설정
    upstream auth {
        server host.docker.internal:8080; # 요청을 전달할 인증 서버 1
        server host.docker.internal:8081; # 요청을 전달할 인증 서버 2
        keepalive 10;                     # 기본으로 살아있는 커넥션 개수: 10개 (요청이 100개가 들어오면, 커넥션 100개까지 늘어나지만, 요청 처리 끝나면 90개는 사라지고 10개만 그대로 남아있는 것)
        keepalive_timeout 50s;            # 50초만큼 10개가 살아있을 수 있는 시간이 있어서 요청을 처리하는 커넥션을 재생성하지 않아도 되는 이점을 가져갈 수 있음
    }

    server {
        listen 80;
        location /api/ {
            proxy_pass http://auth;
            proxy_http_version 1.1;            # 이 proxy_http_version 1.1과 proxy_set_header Connection "" 설정을 해줘야 위에 설정한 keepalive 10, keepalive_timeout 50s 설정이 동작함
            proxy_set_header Connection "";    # 이 proxy_http_version 1.1과 proxy_set_header Connection "" 설정을 해줘야 위에 설정한 keepalive 10, keepalive_timeout 50s 설정이 동작함
            proxy_set_header host $host;                                   # 클라이언트가 요청한 호스트 정보 (예: GET https://example.com/api)
            proxy_set_header X-Real-IP $remote_addr;                       # Nginx가 실제로 요청을 받은 클라이언트의 IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   # Nginx가 여러개가 중간에 있다면 그 각각의 Nginx 서버 IP를 나열
        }
        location /ws/ {
            proxy_pass http://chat;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;  # HTTP -> WebSocket 프로토콜 전환을 위한 필수 헤더, 클라이언트가 보낸 Upgrade: websocket 헤더를 백엔드로 전달
            proxy_set_header Connection "Upgrade";   # HTTP -> WebSocket 프로토콜 전환을 위한 필수 헤더, 클라이언트가 보낸 Upgrade: websocket 헤더를 백엔드로 전달
            proxy_read_timeout 86400s;               # 채팅 서버에서 데이터를 읽을 때 최대 대기 시간
            proxy_send_timeout 86400s;               # 채팅 서버에서 데이터를 보낼 때 최대 대기 시간
            proxy_set_header host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}