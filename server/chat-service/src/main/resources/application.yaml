spring:
  config:
    activate:
      on-profile: local
  application:
    name: server-chat
  datasource:
    source:
      hikari:
        pool-name: SourceConnectionPool
        minimum-idle: 10
        maximum-pool-size: 20
        idle-timeout: 60000 # 1분
        connection-timeout: 30000 # 30초
        jdbc-url: jdbc:mysql://localhost:3306/chat
        username: chatdev
        password: chatdev
        driver-class-name: com.mysql.cj.jdbc.Driver
    replica:
      hikari:
        pool-name: ReplicaConnectionPool
        minimum-idle: 10
        maximum-pool-size: 20
        idle-timeout: 60000 # 1분
        connection-timeout: 30000 # 30초
        jdbc-url: jdbc:mysql://localhost:13306/chat
        username: chatdev
        password: chatdev
        driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
  kafka:
    bootstrap-servers: localhost:19094,localhost:19095,localhost:19096
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        delivery.timeout.ms: 10000
        request.timeout.ms: 3000
        retry.backoff.ms: 100
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      repositories:
        enabled: false


chat-server:
  kafka:
    listeners:
      push:
        topic: push-notification

server:
  port: 8090