name: pj5-chat

services:
  nginx:
    hostname: pj5-chat-nginx
    container_name: pj5-chat-nginx
    image: nginx:1.27.5
    ports:
      - "80:80"
    volumes:
      - ./docker/conf/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped

  mysql-source:
    hostname: pj5-chat-mysql-source
    container_name: pj5-chat-mysql-source
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', 'localhost' ]
      interval: 10s
      timeout: 5s
      retries: 3
    image: mysql:8.0.38
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=chat
      - MYSQL_USER=chatdev
      - MYSQL_PASSWORD=chatdev
    ports:
      - '3306:3306'
    volumes:
      - ./docker/data/mysql-source:/var/lib/mysql
      - ./docker/init-scripts-source:/docker-entrypoint-initdb.d
    command: >
      --server-id=1
      --log_bin=/var/lib/mysql/mysql-bin.log
      --enforce-gtid-consistency=ON
      --gtid-mode=ON

    # --server-id=1 : 각 MySQL 서버의 고유 ID
    # --log_bin=/var/lib/mysql/mysql-bin.log : Binary Log를 활성화하고 저장 위치를 지정
    # Source 에서 일어나는 모든 변경사항을 기록, Replica는 이 로그를 읽어서 복제

    # --enforce-gtid-consistency=ON : GTID 와 호환되지 않는 SQL 명령을 차단
    # --gtid-mode=ON : GTID(Global Transaction ID) 활성화, 각 트랜잭션의 고유 ID 부여. 형식: `server_uuid:transaction_id`

  mysql-replica:
    hostname: pj5-chat-mysql-replica
    container_name: pj5-chat-mysql-replica
    image: mysql:8.0.38
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - '13306:3306'
    volumes:
      - ./docker/data/mysql-replica:/var/lib/mysql
      - ./docker/init-scripts-replica:/docker-entrypoint-initdb.d
    depends_on:
      mysql-source:
        condition: service_healthy
    command: >
      --server-id=2
      --relay_log=/var/lib/mysql/mysql-relay-bin.log
      --enforce-gtid-consistency=ON
      --gtid-mode=ON
      --read-only=1
    # --relay_log=/var/lib/mysql/mysql-relay-bin.log : Source의 Binary Log를 Replica가 로컬에 복사해둔 파일
    # Replica 만의 중간 저장소 역할

  redis:
    hostname: pj5-chat-redis
    container_name: pj5-chat-redis
    image: redis:7.4
    ports:
      - "6379:6379"
    volumes:
      - ./docker/data/redis:/data

  kafka1:
    hostname: pj5-chat-kafka1
    container_name: pj5-chat-kafka1
    image: bitnami/kafka:3.9.0-debian-12-r13
    restart: unless-stopped
    ports:
      - "19094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=65686eb4-6728-48f8-8a6b-e09a22fdde18
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka1:9092,EXTERNAL://localhost:19094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
    volumes:
      - ./docker/data/kafka1:/bitnami/kafka/data

  kafka2:
    hostname: pj5-chat-kafka2
    container_name: pj5-chat-kafka2
    image: bitnami/kafka:3.9.0-debian-12-r13
    restart: unless-stopped
    ports:
      - "19095:9094"
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=65686eb4-6728-48f8-8a6b-e09a22fdde18
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka2:9092,EXTERNAL://localhost:19095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
    volumes:
      - ./docker/data/kafka2:/bitnami/kafka/data

  kafka3:
    hostname: pj5-chat-kafka3
    container_name: pj5-chat-kafka3
    image: bitnami/kafka:3.9.0-debian-12-r13
    restart: unless-stopped
    ports:
      - "19096:9094"
    environment:
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_KRAFT_CLUSTER_ID=65686eb4-6728-48f8-8a6b-e09a22fdde18
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka3:9092,EXTERNAL://localhost:19096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
    volumes:
      - ./docker/data/kafka3:/bitnami/kafka/data

  kafka-ui:
    hostname: pj5-chat-kafka-ui
    container_name: pj5-chat-kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    restart: unless-stopped
    ports:
      - "18090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=PJ5-Chat-Kafka-Cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9092,kafka3:9092
    volumes:
      - ./docker/data/kafkaui:/etc/kafkaui
    depends_on:
      - kafka1
      - kafka2
      - kafka3